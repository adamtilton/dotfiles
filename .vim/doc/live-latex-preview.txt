*live-latex-preview.txt*	For Vim version 7.3.  Last change: 2011 Jul 06 

                                                            *live-latex-preview*

A plugin for creating a live-updating PDF preview for a LaTeX file in MuPDF

Default key bindings:~

\p = Begin auto-compilation and launch MuPDF preview.
\o = End auto-compilation and close MuPDF preview.
\s = Check the result of the last compilation; 
       jump to first error in case of errors.
\f = Forward search to page in PDF matching cursor 
       position in source. 
\r = Reverse/inverse search to position in source
       matching active page in MuPDF. (Very approximate.)

\<PageUp>, \<PageDown>, \<Up>, \<Down>, \<Right>, \<Left>, \G
    \m, \t, \-, \+, \= = Send the corresponding keystrokes
    to the MuPDF preview without losing focus on vim Window

The '\' can be changed by changing <LocalLeader>.

Be aware that when the preview is active, your file is saved whenever 
the cursor moves. Be sure to take the appropriate measures to keep 
back-up saves and undo files so you can undo changes if need be. If
you would like the file to save with each keystroke even when the
preview is not active, then put

      let tex_preview_always_autosave = 1

into your .vimrc file.

To compile with XeLaTeX rather than PDFLaTeX, include the string 
'xelatex' somewhere in the first five lines of your file (e.g., in a
comment). Currently only PDFLaTeX and XeLaTeX are supported. (Support 
for LuaLaTeX and/or LaTeX > dvips > ps2pdf may be added in the future, 
but they may be too slow for the live updating process anyway.)

To suppress the default key mappings, insert:

      let no_tex_maps = 1

into your .vimrc file. You may then define your own mappings which
execute the command :call FunctionName(). The important function 
names defined by the plugin are *LaunchMuPDF()* which starts the 
process, *CloseMuPDF()* , which closes the preview, 
*CheckLiveUpdateStatus()* , which returns the results of the last 
compilation, and *MuPDFForward()* and *MuPDFReverse()* for forward
and reverse search.

                                             *LaTeX subdocuments*
                                                 *LaTeX root*

Working with Subdocuments~

If you want to use the live preview feature while editing a 
sub-document, i.e., a document included in another document by means 
of LaTeX's \input{..} or \include{..} commands, then put a comment 
in the first five lines of the subdocument containing the string 
'root = main.tex' (replacing 'main.tex' with the actual name 
of the master file). This is meant to be compatible with the convention 
adopted by other editors such as TeXworks and TeXshop, which use 
the convention:

     % !TeX root = main.tex

to indictate that the master document for a given file is named "main.tex".

All files should be in the same folder.


Contact Kevin C. Klement <klement@philos.umass.edu> with bug reports.

 vim:tw=78:ts=8:ft=help:norl:
